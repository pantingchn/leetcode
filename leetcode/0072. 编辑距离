class Solution:
    def minDistance(self, word1: str, word2: str) -> int:
        len_w1 = len(word1)
        len_w2 = len(word2)
        row = [0] * (len_w1 + 1)
        dp = []
        for i in range(len_w2 + 1):
            dp.append(row.copy())
        # 初始化
        for i in range(len_w1 + 1):
            dp[0][i] = i
        for i in range(len_w2 + 1):
            dp[i][0] = i

        for i in range(1, len_w2 + 1):
            for j in range(1, len_w1 + 1):
                if word1[j - 1] == word2[i - 1]:
                    dp[i][j] = min(dp[i - 1][j - 1], dp[i - 1][j] + 1, dp[i][j - 1] + 1)
                else:
                    dp[i][j] = min(dp[i - 1][j - 1] + 1, dp[i - 1][j] + 1, dp[i][j - 1] + 1)
        return dp[len_w2][len_w1]
