class Solution(object):
    def longestSubsequence(self, arr, difference):
        """
        :type arr: List[int]
        :type difference: int
        :rtype: int
        """
        dict_ = {}
        for n in arr:
            if n-difference in dict_:
                dict_[n] = dict_[n-difference] + 1 
                if n != n-difference:
                    del dict_[n-difference]
            else:
                if n not in dict_:
                    dict_[n] = 1
        return max(dict_.values())



#####动态规划

class Solution(object):
    def longestSubsequence(self, arr, difference):
        """
        :type arr: List[int]
        :type difference: int
        :rtype: int
        """
        dp=dict()
        for n in arr:
            dp[n]=(dp[n-difference] if n-difference in dp else 0)+1
        return max(dp.values())
        
